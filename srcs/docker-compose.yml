version: "3.9"

services:
  nginx:
    build: "./requirements/nginx"
    container_name: nginx
    networks: # nginx is in both networks since itâ€™s the true bridge
      - backend
    depends_on:
      - wordpress
    ports:
      - "443:443" # only expose this to outside world since we have to get requests from internet
    volumes:
      - /home/zpiarova/data/wordpress-site:/var/www/html
      - ./requirements/nginx/conf:/etc/nginx/conf.d # bind directory with nginx conf file on host to nginx/conf.d on container, as it should always contain the current conf file
      - ./.secrets/ssl:/etc/ssl
    restart: "on-failure"
    # image: nginx:latest
    # ports:
    #   - "1024:80"
    # volumes:
    #   - ./.:/usr/share/nginx/html
    # restart: always

  wordpress:
    build: "./requirements/wordpress"
    container_name: wordpress
    networks:
      - backend
    depends_on:
      - mariadb
    # no ports because we do not want to expose it to host
    volumes:
      - /home/zpiarova/data/wordpress-site:/var/www/html # bind mount
    restart: "on-failure"
    environment:
      WORDPRESS_DB_HOST: mariadb:${DB_PORT}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}

  mariadb: 
    build: "./requirements/mariadb"
    container_name: mariadb
    networks:
      - backend
    # no ports because we do not want to expose it to host
    volumes:
      - /home/zpiarova/data/wordpress-database:/var/lib/mysql  # bind mount
    restart: "on-failure"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_USER: ${WORDPRESS_DB_USER}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD}

# blocks can be empty if we want the default config, compose will create them automatically
networks: # 2 networks for better security
  frontend: # only for nginx and external requests
  backend: # connects mariadb+wp(+nginx) - now seems pointless, but networks may grow - this keeps mariadb isolated from other possible frontend containers